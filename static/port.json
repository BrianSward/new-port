{
  "projects": [
        {
            "name": "Fake News Detector",
            "url": "https://github.com/BrianSward/colab-work/blob/main/fake_news_machine.ipynb",
            "tech_used": "Python, Jupyter/Kaggle, Machine Learning, Web Scraping, Pandas, Numpy, BeautifulSoup, JSON, Request, Spacy, Trafilatura",
            "purpose": "This code uses numpy, pandas, and scikit-learn (sklearn) to read and preprocess a dataset of news articles to train on. The code prompts the user to input a URL and then extracts the text content from the page using BS and Traf. Finally, it outputs the predicted label (fake or real) for the extracted text using the previously trained model. The tools, libraries, and skills on display in this code include data preprocessing, machine learning, web scraping, HTTP requests, and text extraction."
        },
        {
            "name": "Web Text Extractor",
            "url": "https://github.com/BrianSward/colab-work/blob/main/extractor.ipynb",
            "tech_used": "Python, Jupyter/Kaggle, Web Scraping, BeautifulSoup, Trafilatura, JSON, textwrap",
            "purpose": "This code defines functions to extract text from a single web page using a combination of libraries like BeautifulSoup, Trafilatura, and Requests. It takes a user input URL, extracts the text from the given URL, and wraps the text into paragraphs of 80 characters per line using the textwrap library. If there are any anomalies in the extraction process, it returns NaN."
        },
        {
            "name": "Code Wars Practice",
            "url": "https://github.com/BrianSward/code-wars",
            "tech_used": "Vanilla Python",
            "purpose": "Code Wars is designed to test your programming chops. This GitHub contains all my demonstrative skill-based work amassed since graduating Code Fellows. Problems are approached without using methods to simulate whiteboard questions and responses."
        },
        {
            "name": "Flask User Post API",
            "url": "https://github.com/BrianSward/example_flask",
            "tech_used": "Python, JSON, Jinja, Pytest, API Creation, Data Formatting",
            "purpose": "This is a simple Flask application that defines an API endpoint for receiving user posts. The /user-post endpoint accepts a JSON payload containing a username and text field, restructures the data, and returns it as a JSON response."
        },
        {
            "name": "Website Portfolio",
            "url": "https://github.com/BrianSward/new-port",
            "tech_used": "Python, JSON, HTML, Bootstrap, CSS",
            "purpose": "This is a simple portfolio built using Flask to provide a simple interface with clean delivery of information, or static files like photos or resumes. Most of the site is auto populated via a JSON file. This allows for content updates to be made without touching the HTML itself allowing non-tech savvy end users' more control over their site's content without the need of a web guru."
        },
        {
            "name": "Mortgage Data Analysis",
            "url": "https://github.com/MORTGAGE-FINDER",
            "tech_used": "Python, Machine Learning, Jupyter/Kaggle, Django, Numpy, Pandas, MatPlotLib, Tailwind, Next.js",
            "purpose": "Performed Logistical Regression on publicly available data to determine given categorical data if a user will be approved for a loan."
        },
        {
            "name": "Data Structures and Algorithms",
            "url": "https://github.com/BrianSward/data-structures-and-algorithms./tree/main/python",
            "tech_used": "Python, Stack, Queue, Node, Hashtable, Graphs, Binary Tree, Binary Search Trees, Linked List",
            "purpose": "Demonstrative knowledge of fundamental data structures and common approaches such as, but not limited to: insertion sorts, merge sort, and weighted graph traversal."
        },
        {
            "name": "Chess Board Checker",
            "url": "https://github.com/BrianSward/chessboard-checker",
            "tech_used": "Python, Jupyter/Kaggle, Numpy, Pandas, MatPlotLib",
            "purpose": "To determine if two randomly placed chess queens can \"see\" each other, and then return a boolean response to the user along with a graphical representation for visual confirmation."
        },
        {
            "name": "Housing Hunter Hero",
            "url": "https://github.com/BrianSward/housing-hunter-hero",
            "tech_used": "Python, BeautifulSoup, Web Scraping, JSON, HTML, Data Pipelining",
            "purpose": "To get a quick simple list of available properties with details and URL to the listing. This was done by taking in a user supplied zipcode, scraping a well known real estate site for data, and returning that information formatted for use by the user."
        },
        {
            "name": "Data Extraction Automation",
            "url": "https://github.com/BrianSward/automation/tree/main/automotion_lab",
            "tech_used": "Python, RegEx, Data Formatting, Pytest",
            "purpose": "Demonstrative logic to iterate through simulated web scraped data and use regular expressions to extract the needed data."
        }
    ],
    "info":[
        {
            "uni" :[{ 
                "name":"Wesleyan University",
                "location": "Middletown, Connecticut",
                "url": "https://en.wikipedia.org/wiki/Wesleyan_University",
                "courses": ["Abstract Linear Algebra", "Graph Theory", "Complex Analysis", "Abstract Algebra", "Topology"]
                }
            ],
             "links" :[{ 
                "email":"b s w a r d (A T) g m a i l (D O T) c o m",
                "linkedin_url": "https://www.linkedin.com/in/brian-sward/",
                "github_url": "https://github.com/BrianSward",
                "codewars_url": "https://www.codewars.com/users/BSward/completed"           
                }
            ],
            "skills":[{
                "p_lang": "Python, R, SQL, JavaScript, HTML, CSS, C++",
                "tools": "PyCharm, VS Code, Jupyter, Django REST API, Pandas, Flask, SciKitLearn, Docker, BeautifulSoup,Excel, Google Sheets, Tableau, WSL, Ubuntu, NumPy, Django, MongoDB, Matplotlib, Bootstrap, Seaborn, Chart.JS, Budget Analysis, API Engineering, Data Mining, Data Cleaning, Data Visualization, Database Management, Cross-Functional Collaboration, Technical Instruction, Agile and Waterfall Methodologies, Exploratory, Quantitative, and Qualitative Data Analysis",
                "data_mg": "MySQL, postgreSQL, MongoDB, SQLite3, Pivot Tables, VLookUp",
                "pj_mg":"CSM, Lean Six Sigma, and Google Project Management Certifications"
            }],
            "content":[{
                "opener": "Python developer possessing a fluidity in mathematics and a passion for how software engineering can enhance people's quality of life. Eager to leverage the ethea of continuous education, adaptability, and accountability along with advanced data analysis methodologies inside the software engineering field.",
                "about_1":"Welcome to my website/portfolio. I am a recent graduate from an Advanced Python Development Bootcamp in Seattle. Comparing the experience to my other bootcamp - Parris Island - I would have to say the Python involved less screaming. Additionally, I have a degree in Mathematics and a desire for my dog to live the most outstanding dog life ever.",
                "about_2": "I'm a technology professional with over a decade of experience in data analysis, passionate about solving real-world problems with innovative solutions. My skills include project management, team leadership, and business development, and I'm always eager to stay on top of emerging technologies. In my free time, I enjoy tabletop gaming and exploring the Pacific Northwest. I'm committed to giving back to my community and would love to connect with local non-profits."
              
            }]
        }
    ]
}
